#!/bin/bash

function log_info {
    echo "$(tput setaf 4)$1$(tput sgr0)" >&2
}
function log_warn {
    echo "$(tput setaf 3)$1$(tput sgr0)" >&2
}
function log_error {
    echo "$(tput setaf 1)ERROR:$(tput sgr0) $1" >&2
}


function display_help {
cat <<EOS
Usage: midiplayer [options]  <args> <file>

  midiplayer magic    <file.mid> Magic    Soundfont
  midiplayer fluidgm  <file.mid> Fluid-GM Soundfont
  midiplayer fluidgs  <file.mid> Fluid-GS Soundfont
  midiplayer general  <file.mid> General  Soundfont
  midiplayer timidity <file.mid> Timidity Soundfont
  midiplayer arachno  <file.mid> Arachno  Soundfont
  midiplayer chorium  <file.mid> Chorium  Soundfont
  midiplayer omega    <file.mid> Omega-GM Soundfont
  midiplayer princess <file.mid> Princess Soundfont
  midiplayer 32mb     <file.mid> 32Mb-GM  Soundfont
  midiplayer sf4u     <file.mid> SF4U-GM  Soundfont
  midiplayer hqorch   <file.mid  HQ-Orch  Soundfont
  midiplayer heaven   <file.mid> Heaven   Soundfont
  midiplayer muse     <file.mid> Muse2    Soundfont
  midiplayer sonatina <file.mid> Sonatina Soundfont

Options:
  -h | --help		Show this screen.
  -v | --verbose 	Display the command to be passed through.

EOS
}

CMD='fluidsynth -a alsa -i'
# Match any [options]
while :
do
	case "$1" in
		-h | --help)
			display_help  # Call your function
			# no shifting needed here, we're done.
			exit 0
			;;
		-v | --verbose)
			verbose=true
			shift
			;;
		--dry-run)
			dry_run=true
			shift
			;;
		--) # End of all options
			shift
			break
			;;
		-*)
			log_error "Unknown option: $1"
			break
			;;
		*)  # No more options
			break
			;;
	esac
done
case "$1" in
	    'magic')
	    	shift
		    CMD_ARGS="/usr/share/sounds/sf2/MagicSFver2.sf2 "
		    ;;
	    'fluidgm')
		    shift
	    	CMD_ARGS="/usr/share/sounds/sf2/FluidR3_GM.sf2 "
		    ;;
	    'timidity')
            shift
            CMD_ARGS="/usr/share/sounds/sf2/TimGM6mb.sf2 "
            ;;
	    'fluidgs')
	        shift
	        CMD_ARGS="/usr/share/sounds/sf2/FluidR3_GS.sf2 "
	        ;;
	    'general')
	        shift
	        CMD_ARGS="/usr/share/sounds/sf2/GeneralUserGS_1471.sf2 "
            ;;
        'arachno')
            shift
            CMD_ARGS="/usr/share/sounds/sf2/Arachno.sf2 "
            ;;
        'chorium')
            shift
            CMD_ARGS="/usr/share/sounds/sf2/Chorium.sf2 "
            ;;
        'omega')
            shift
            CMD_ARGS="/usr/share/sounds/sf2/Omega.sf2 "
            ;;
        'princess')
            shift
            CMD_ARGS="/usr/share/sounds/sf2/Princess.sf2 "
            ;;
        '32mb')
            shift
            CMD_ARGS="/usr/share/sounds/sf2/32Mb.sf2 "
            ;;
        'sf4u')
            shift
            CMD_ARGS="/usr/share/sounds/sf2/Sf4UGM.sf2 "
            ;;
        'hqorch')
            shift
            CMD_ARGS="/usr/share/sounds/sf2/HQOrchestra.sf2 "
            ;;
	'heaven')
		shift
		CMD_ARGS="/usr/share/sounds/sf2/Heaven.sf2 "
		;;
	'muse')
		shift
		CMD_ARGS="/usr/share/sounds/sf2/Musescore2.sf2 "
		;;
	'sonatina')
		shift
		CMD_ARGS="/usr/share/sounds/sf2/Sonatina.sf2 "
		;;

	 *)
		    log_error "Unknown command: $1"
		   exit 1
        ;;
	esac

# echo the whole command if verbose is enabled
if [ "$verbose" = true ]; then
	log_info "=> $(tput sgr0)$CMD $CMD_ARGS "$@""
fi

# Call the command
if [ "$dry_run" = true ]; then
	echo "$CMD $CMD_ARGS "$@"" 
else
	$CMD $CMD_ARGS "$@"
fi

exit
